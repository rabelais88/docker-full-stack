# https://github.com/jwilder/nginx-proxy
# https://github.com/jwilder/nginx-proxy#ssl-support-using-letsencrypt
# https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion/issues/102
# https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion/blob/master/docs/Invalid-authorizations.md
version: '3.7'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./dockersettings/dhparam:/etc/nginx/dhparam
      - nginx-vhost:/etc/nginx/vhost.d # for letsencrypt
      - nginx-certs:/etc/nginx/certs # for letsencrypt
      - nginx-conf:/etc/nginx/conf.d
      # - ./dockersettings/vhost.d/127.0.0.1.xip.io:/etc/nginx/vhost.d/127.0.0.1.xip.io
      # - ./dockersettings/gzip.conf:/etc/nginx/conf.d/gzip.conf

  frontend:
    init: true
    image: frontend:latest
    ports:
      - 3000:3000
    environment:
      - VIRTUAL_HOST=sungryeol.xyz,www.sungryeol.xyz
      - VIRUTAL_PORT=3000
      - REACT_APP_API_URL=api.sungryeol.xyz
    # healthcheck:
    #   test: curl -f http://127.0.0.1:3000

  db:
    # networks: # nginx/proxy doesn't support internal networks
    #   - backend
    image: mongo:4.2.0-bionic
    restart: always
    ports:
      - 27017:27017
    # healthcheck:
    #   test: echo 'db.runCommand("ping").ok' | mongo 127.0.0.1:27017/test/ --quiet
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - db-mongo:/data/db

  api:
    image: api:latest
    restart: on-failure
    ports:
      - 4000:4000
    init: true
    environment:
      - VIRTUAL_HOST=api.sungryeol.xyz
      - VIRUTAL_PORT=4000
      - MONGO_URI=db:27017  # use container name for network
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=example
    # healthcheck:
    #   test: curl -f http://127.0.0.1:4000
  
  acme:
    image: custom-acme.sh:latest
    command: /wait && /bin/bash /acme.sh --issue -d sungryeol.xyz -d www.sungryeol.xyz -d api.sungryeol.xyz
    volumes:
      - ./dockersettings/dhparam:/etc/nginx/dhparam
      - nginx-vhost:/etc/nginx/vhost.d # for letsencrypt
      - nginx-certs:/etc/nginx/certs # for letsencrypt
      - nginx-conf:/etc/nginx/conf.d
    environment:
      - WAIT_HOSTS=api:4000, frontend:3000, nginx-proxy:80

volumes:
  db-mongo:
  nginx-vhost:
  nginx-certs:
  nginx-conf:
  html:

# networks:
#   backend: