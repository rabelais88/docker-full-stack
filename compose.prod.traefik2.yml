version: '3.7'
services:
  sr-traefik:
    image: traefik:latest
    volumes:
      - ./dockersettings/traefik.yml:/etc/traefik/traefik.yml # v2 settings
      - /var/run/docker.sock:/var/run/docker.sock
      - acme:/etc/traefik/acme
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    # environment:
    #   - WAIT_HOSTS=sr-api:4000, sr-frontend:3000
  sr-frontend:
    init: true
    image: frontend:latest
    ports:
      - 3000:3000
    # deploy:
    #   labels:
    #     - traefik.http.routers.sr-frontend-router-http.rule=Host(`sungryeol.xyz`)
    #     - traefik.http.routers.sr-frontend-router-http.middlewares=sr-https-redirectscheme
    #     - traefik.http.routers.sr-frontend-router-https.rule=Host(`sungryeol.xyz`)
    #     - traefik.http.routers.sr-frontend-router-https.tls={}
    #     - traefik.http.services.sr-frontend-service.loadBalancer.servers
    #     # - traefik.http.services.sr-frontend-service.loadBalancer.servers.port=3000
    
  db:
    image: mongo:4.2.0-bionic
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - db-mongo:/data/db
  
  sr-api:
    image: api:latest
    init: true
    restart: on-failure
    ports:
      - 4000:4000
    environment:
      - MONGO_URI=db:27017  # use container name for network
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=example
    # deploy:
    #   labels:
    #     - traefik.http.routers.sr-api-router-http.rule=Host(`api.sungryeol.xyz`)
    #     - traefik.http.routers.sr-api-router-http.middlewares=sr-https-redirectscheme
    #     - traefik.https.routers.sr-api-router-https.rule=Host(`api.sungryeol.xyz`)
    #     - traefik.https.routers.sr-api-router-https.tls={}
    #     # - traefik.http.services.sr-api-service=loadBalancer.servers.port=4000
  
volumes:
  db-mongo:
  acme: